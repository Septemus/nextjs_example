generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customers {
  id        String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String @db.VarChar(255)
  email     String @db.VarChar(255)
  image_url String @db.VarChar(255)
}

model invoices {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id String   @db.Uuid
  amount      Int
  status      String   @db.VarChar(255)
  date        DateTime @db.Date
}

model revenue {
  month   String @unique @db.VarChar(4)
  revenue Int
}

enum Role {
  MANUFACTURER
  DISTRIBUTOR
  CUSTOMER
}

model users {
  id             String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name           String      @db.VarChar(255)
  email          String      @unique
  password       String
  companiesId    Int?
  role  Role    @default(CUSTOMER)
  mycompany      companies?  @relation("employment", fields: [companiesId], references: [id], onUpdate: Cascade)
  foundedCompany companies[] @relation("found")
}

model companies {
  id                 Int      @id @default(autoincrement())
  name               String // Company name
  physicalAddress    String // Physical address
  registrationNumber String? // Registration number (optional)
  taxId              String? // Tax ID (optional)
  founderId          String   @db.Uuid
  createdAt          DateTime @default(now())
  employees          users[]  @relation("employment")
  founder            users    @relation(fields: [founderId], references: [id], onUpdate: Cascade, name: "found")
}
