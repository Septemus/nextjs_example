generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customers {
  id        String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name      String @db.VarChar(255)
  email     String @db.VarChar(255)
  image_url String @db.VarChar(255)
}

model invoices {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customer_id String   @db.Uuid
  amount      Int
  status      String   @db.VarChar(255)
  date        DateTime @db.Date
}

model revenue {
  month   String @unique @db.VarChar(4)
  revenue Int
}

enum Role {
  MANUFACTURER
  DISTRIBUTOR
  CUSTOMER
}

model users {
  id             String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name           String      @db.VarChar(255)
  email          String      @unique
  password       String
  companiesId    Int?
  role  Role    @default(CUSTOMER)
  mycompany      companies?  @relation("employment", fields: [companiesId], references: [id], onUpdate: Cascade)
  foundedCompany companies[] @relation("found")
  createdProducts products[] @relation("created_products") // 🔥加这行
  ownedProducts   products[] @relation("owned_products")   // 🔥加这行
}

model companies {
  id                 Int      @id @default(autoincrement())
  name               String // Company name
  physicalAddress    String // Physical address
  registrationNumber String? // Registration number (optional)
  taxId              String? // Tax ID (optional)
  founderId          String   @db.Uuid
  createdAt          DateTime @default(now())
  employees          users[]  @relation("employment")
  founder            users    @relation(fields: [founderId], references: [id], onUpdate: Cascade, name: "found")
  product_types           product_types[] @relation("company_product_types") // 🔥加这行

}

enum ProductStatus {
  MANUFACTURING
  DISTRIBUTING
  FOR_SALE
  SOLD
}

model product_types {
  id            Int           @id @default(autoincrement())
  name          String        // 商品名称
  description   String?       // 商品描述
  coverUrl      String?       // 商品图片链接

  companyId     Int
  manufacturerCompany companies @relation("company_product_types", fields: [companyId], references: [id], onUpdate: Cascade)

  products      products[]    @relation("type_to_products")
}

model products {
  id                Int           @id @default(autoincrement())
  serialNumber      String        @unique
  manufactureDate   DateTime
  createdAt         DateTime      @default(now())

  typeId            Int
  type              product_types @relation("type_to_products", fields: [typeId], references: [id], onUpdate: Cascade)

  creatorId         String        @db.Uuid
  currentOwnerId    String        @db.Uuid
  status            ProductStatus @default(MANUFACTURING)

  creator           users         @relation("created_products", fields: [creatorId], references: [id], onUpdate: Cascade)
  currentOwner      users         @relation("owned_products", fields: [currentOwnerId], references: [id], onUpdate: Cascade)
}
